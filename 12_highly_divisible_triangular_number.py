#!/Users/satinderjitsingh/anaconda3/bin/python
''' 
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
'''

import math
n=1
sum = 1

# we already know every number > 1 has 2 divisors which are 1 and number itself
number_of_divisors=2

while number_of_divisors <= 500:
  n = n + 1
  sum = sum + n
  number_of_divisors=2

# only check till sqrt of number to avoid duplication of divisors
  sqrt_sum = int(math.sqrt(sum) + 1)

# check if number is divisible, if yes add divisor and quotient to number of divisors
  for i in range(2,sqrt_sum):
    if(sum%i==0):
      number_of_divisors += 2

print(sum)
